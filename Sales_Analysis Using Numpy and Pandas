# Sales Analysis
import pandas as pd
import os
##### Merging 12 months of sales data into single file
df = pd.read_csv("./Sales_Data/Sales_April_2019.csv")

files = [file for file in os.listdir('./Sales_Data')]
all_months_data = pd.DataFrame()

for file in files:
   df = pd.read_csv("./Sales_Data/"+file)
   all_months_data = pd .concat([all_months_data, df])
    
all_months_data.head()
all_months_data.to_csv("All_Data.csv", index = False)
#### Read in updated dataframe
all_data = pd.read_csv("All_Data.csv")
all_data.head()
##### Clean up data
all_data = all_data.dropna(how='all')
all_data.head()
###### find or and delete it
all_data = all_data[all_data['Order Date'].str[0:2]!= 'Or']

#convert column to correct type
all_data['Quantity Ordered'] = pd.to_numeric(all_data['Quantity Ordered'])  #make int
all_data['Price Each'] = pd.to_numeric(all_data['Price Each']) #make float

### Augment data with additional columns
###### Add month column
all_data["Month"] = all_data['Order Date'].str[0:2]
all_data["Month"] = all_data["Month"].astype('int32')
all_data.head()
# Add a sales column
all_data['Sales'] = all_data['Quantity Ordered'] * all_data['Price Each']
all_data.to_csv('All_Data.csv', index=False)
all_data = pd.read_csv('All_Data2.csv')
# all_data = all_data.drop('index', axis=1)
all_data.head()
#### Quetion: What is the best month for sales? How much was earned in that month
results = all_data.groupby('Month').sum()
results

import matplotlib.pyplot as plt
months = range(1,13)
plt.bar(months,results['Sales'])
plt.xticks(months)
plt.ylabel('Sales in Himachal(Rs.)')
plt.xlabel('Month Number')
#### Quetion: Which city has heighest number of sales?
# Adding a city column'
def get_city(address):
    return address.split(',')[1]
def get_state(address):
    return address.split(',')[2].split(' ')[1]
all_data['City'] = all_data['Purchase Address'].apply(lambda x: get_city(x)+ ' '+ get_state(x))   #.apply help us to define function
# all_data = all_data.drop(columns='column')
all_data.head()

results = all_data.groupby('City').sum()
results
import matplotlib.pyplot as plt
cities = [city for city, df in all_data.groupby('City')]
plt.bar(cities,results['Sales'])
plt.xticks(cities, rotation = 'vertical', size=8)
plt.ylabel('Sales in Himachal(Rs.)')
plt.xlabel('City Name')
#### Quetion: what time shoulf we display advertisement to maximize likelihood of customers buying product?
all_data['Order Date'] = pd.to_datetime(all_data['Order Date'])
all_data['Hour'] = all_data['Order Date'].dt.hour
all_data['Minute'] = all_data['Order Date'].dt.minute
all_data.head()
hours = [hour for hour, df in all_data.groupby('Hour')]
Qty = all_data.groupby('Hour')['Quantity Ordered'].sum()
Qty
plt.plot(hours, Qty)
plt.xticks(hours)
plt.xlabel('Hour')
plt.ylabel('Number of orders')
plt.grid()
plt.show()
#### Quetion: What products are most often sells together?
df = all_data[all_data['Order ID'].duplicated(keep=False)]
df['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))
df = df[['Order ID','Grouped']].drop_duplicates()
df.head()
from itertools import combinations
from collections import Counter


count = Counter()
for row in df['Grouped']:
    row_list = row.split(',')
    count.update(Counter(combinations(row_list, 2)))

for key,value in count.most_common(10):
    print(key, value)
#### Quetion: what product sells the most?
product_group = all_data.groupby('Product')

quantity_ordered = product_group.sum()['Quantity Ordered']

products = [product for product, df in product_group]
plt.bar(products, quantity_ordered,color='b')
plt.ylabel('Quantity Orderd')
plt.xlabel('Product')
plt.xticks(products, rotation='vertical', size=8)
plt.show()
prices = all_data.groupby('Product')
prices = prices['Price Each'].mean()
fig, ax1 = plt.subplots()

ax2 = ax1.twinx()
ax1.bar(products, quantity_ordered, color='blue')
ax2.plot(products, prices,'black')

ax1.set_xlabel('Product Name')
ax1.set_ylabel('Quantity Ordered', color='green')
ax2.set_ylabel('Price ($)', color='b')
ax1.set_xticklabels(products, rotation='vertical', size=8)
plt.show()
